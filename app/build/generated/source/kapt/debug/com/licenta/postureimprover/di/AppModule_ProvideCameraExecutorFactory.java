// Generated by Dagger (https://dagger.dev).
package com.licenta.postureimprover.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import java.util.concurrent.ExecutorService;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCameraExecutorFactory implements Factory<ExecutorService> {
  @Override
  public ExecutorService get() {
    return provideCameraExecutor();
  }

  public static AppModule_ProvideCameraExecutorFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static ExecutorService provideCameraExecutor() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCameraExecutor());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideCameraExecutorFactory INSTANCE = new AppModule_ProvideCameraExecutorFactory();
  }
}
